{"version":3,"file":"static/js/517.be586f9f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"btn\":\"ContactForm_btn__wll+u\"};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\nimport { addContacts } from '../../redux/operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const data = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    const newName = contacts.find(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (newName) {\n      alert(`${name} is already is in contacts.`);\n      return;\n    }\n    dispatch(addContacts(data));\n    resetForm();\n  };\n\n  const handleChange = evt => {\n    switch (evt.currentTarget.name) {\n      case 'name':\n        setName(evt.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(evt.currentTarget.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={css.container} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n          id={nameInputId}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n          id={numberInputId}\n        />\n      </label>\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__pSkfx\",\"input\":\"Filter_input__N7T3z\"};","import css from './Filter.module.css';\nimport { setStatusFilter } from \"../../redux/filterSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function Filter() {\n\n    const filter = useSelector(state => state.contacts.filter);\n    const dispatch = useDispatch(); \n\n  return (\n    <>\n      <label className={css.title}>\n        Find contacts by name\n        <input\n          className={css.input}\n          type=\"text\"\n          value={filter}\n          onChange={e => dispatch(setStatusFilter(e.target.value))}\n        />\n      </label>\n    </>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\",\"contact__list\":\"ContactList_contact__list__2jNwc\",\"contact__item\":\"ContactList_contact__item__PFoNH\",\"contacts__button\":\"ContactList_contacts__button__uwkrO\"};","import css from './ContactList.module.css';\nimport { deleteContacts, fetchContacts } from '../../redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.status);\n  const contacts = useSelector(state => state.contacts.items);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n  return (\n    <ul className={css.contacts}>\n      {getContacts.map(({ id, name, phone }) => (\n        <li className={css.contact__list} key={id}>\n          <span className={css.contact__item}>{name}: </span>\n          <span className=\"contact__item\">{phone} </span>\n          <button\n            className={css.contacts__button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContacts(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/operations';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ContactForm","useState","name","setName","number","setNumber","nameInputId","numberInputId","dispatch","useDispatch","contacts","useSelector","state","items","handleChange","evt","currentTarget","value","resetForm","className","css","onSubmit","preventDefault","data","find","el","toLowerCase","alert","addContacts","type","pattern","title","required","onChange","Filter","filter","e","setStatusFilter","target","ContactList","status","useEffect","fetchContacts","getContacts","contact","includes","map","phone","onClick","deleteContacts","Contacts"],"sourceRoot":""}